# ----------------------------------------------------------------------------
#   Display status message for important variables
# ----------------------------------------------------------------------------
MESSAGE(STATUS)
MESSAGE(STATUS "------------- General configuration for ${PROJECT_NAME} - ${VERSION} -------------")
MESSAGE(STATUS)
MESSAGE(STATUS "Generator:    ${CMAKE_GENERATOR}")
MESSAGE(STATUS "Compiler:     ${CMAKE_CXX_COMPILER_ID}")

IF(${CMAKE_BUILD_TYPE} STREQUAL "Release")
   MESSAGE(STATUS "C flags (Release):     ${CMAKE_C_FLAGS} ${CMAKE_C_FLAGS_RELEASE}")
   MESSAGE(STATUS "C++ flags (Release):   ${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_RELEASE}")
ELSE()
   MESSAGE(STATUS "C flags (Debug):       ${CMAKE_C_FLAGS} ${CMAKE_C_FLAGS_DEBUG}")
   MESSAGE(STATUS "C++ flags (Debug):     ${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_DEBUG}")
ENDIF()
MESSAGE(STATUS)
MESSAGE(STATUS "------------------------------------------------------------------")
MESSAGE(STATUS)
MESSAGE(STATUS "USE_CLANG              = ${USE_CLANG}")
IF(${USE_CLANG})
   MESSAGE(STATUS "USE_ANALYZE            = ${USE_ANALYZE}")
   MESSAGE(STATUS "ANALYZE_MEMORY         = ${ANALYZE_MEMORY}")
   MESSAGE(STATUS "ANALYZE_ADDRESS        = ${ANALYZE_ADDRESS}")
   MESSAGE(STATUS "ANALYZE_THREAD         = ${ANALYZE_THREAD}")
   MESSAGE(STATUS "ANALYZE_UNDEFINED      = ${ANALYZE_UNDEFINED}")
   MESSAGE(STATUS "ANALYZE_DATAFLOW       = ${ANALYZE_DATAFLOW}")
   IF(${USE_ANALYZE})
      MESSAGE(STATUS "----------------------- Run static analyzer ----------------------")
      MESSAGE(STATUS "##############################")
      MESSAGE(STATUS "RUN: scan-build make -jX")
      MESSAGE(STATUS "##############################")
      MESSAGE(STATUS)
   ENDIF()
   IF(${ANALYZE_ADDRESS})
      MESSAGE("##########################################################")
      MESSAGE(STATUS "For better visualitation change enviroment variable: ASAN_SYMBOLIZER_PATH=/path/to/llvm-symbolizer")
      MESSAGE(STATUS "Detect memory leaks, change enviroment variable: ASAN_OPTIONS=\"detect_leaks=1\"")
      MESSAGE("##########################################################")
   ENDIF()
ENDIF()
MESSAGE(STATUS)
MESSAGE(STATUS "CMAKE_BUILD_TYPE       = ${CMAKE_BUILD_TYPE}")
MESSAGE(STATUS "CMAKE_SYSTEM_PROCESSOR = ${CMAKE_SYSTEM_PROCESSOR}")
MESSAGE(STATUS "CMAKE_INSTALL_PREFIX   = ${CMAKE_INSTALL_PREFIX}")
MESSAGE(STATUS)
MESSAGE(STATUS "WARNINGS_ANSI_ISO      = ${WARNINGS_ANSI_ISO}")
MESSAGE(STATUS "WARNINGS_ARE_ERRORS    = ${WARNINGS_ARE_ERRORS}")
MESSAGE(STATUS "WARNINGS_EFFCPP        = ${WARNINGS_EFFCPP}")
MESSAGE(STATUS)
MESSAGE(STATUS "ENABLE_PROFILING       = ${ENABLE_PROFILING}")
MESSAGE(STATUS)
MESSAGE(STATUS "ENABLE_COVERAGE        = ${ENABLE_COVERAGE}")
MESSAGE(STATUS "ENABLE_COVERAGE_XML    = ${ENABLE_COVERAGE_XML}")
MESSAGE(STATUS)
MESSAGE(STATUS "BUILD_SHARED_LIBS      = ${BUILD_SHARED_LIBS}")
MESSAGE(STATUS "BUILD_TESTS            = ${BUILD_TESTS}")
MESSAGE(STATUS "BUILD_UTILS            = ${BUILD_UTILS}")
MESSAGE(STATUS)
MESSAGE(STATUS "-------------------------- Dependencies --------------------------")
MESSAGE(STATUS)
MESSAGE(STATUS "DISABLE_LOG            = ${DISABLE_LOG}")
MESSAGE(STATUS "LINE_NUMBERS_LOG       = ${LINE_NUMBERS_LOG}")
MESSAGE(STATUS)
MESSAGE(STATUS "QsLog                  = ${QsLog_VERSION} - ${QsLog_LIBS}")
MESSAGE(STATUS)
MESSAGE(STATUS "Qt5Core                = ${Qt5Core_VERSION} - ${Qt5Core_LIBRARIES}")
MESSAGE(STATUS "Qt5Widgets             = ${Qt5Widgets_VERSION} - ${Qt5Widgets_LIBRARIES}")
MESSAGE(STATUS "Qt5Network             = ${Qt5Network_VERSION} - ${Qt5Network_LIBRARIES}")
MESSAGE(STATUS "Qt5Test                = ${Qt5Test_VERSION} - ${Qt5Test_LIBRARIES}")
MESSAGE(STATUS)
MESSAGE(STATUS "MAVSDK_FOUND           = ${MAVSDK_FOUND}")
MESSAGE(STATUS "MAVSDK_LIBS            = ${MAVSDK_LIBRARIES}")
MESSAGE(STATUS)
MESSAGE(STATUS "ROS_DISTRO             = $ENV{ROS_DISTRO}")
MESSAGE(STATUS)
MESSAGE(STATUS "---------------------- Documentation ----------------------")
MESSAGE(STATUS)
MESSAGE(STATUS "Change a value with: cmake -D<Variable>=<Value>")
MESSAGE(STATUS)
